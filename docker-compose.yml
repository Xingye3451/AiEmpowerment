version: '3.8'

services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    image: aiempowerment-backend:latest
    container_name: aiempowerment-backend
    init: true  # 使用 init 进程管理
    stop_signal: SIGINT  # 使用 SIGINT 信号优雅停止
    stop_grace_period: 10s  # 给予足够的停止时间
    volumes:
      - ./backend/app.db:/app/app.db
      - ./backend/config:/app/config
      - ./uploads:/app/uploads
      - ./static:/app/static
      - ./data:/app/data
      - ./backend/logs:/app/logs
    environment:
      - CONFIG_FILE=/app/config/default.yaml
      - SECRET_KEY=your-secret-key-here
      - PYTHONUNBUFFERED=1
      # 标准目录环境变量
      - UPLOAD_DIR=/app/uploads
      - OUTPUT_DIR=/app/uploads/processed
      - TEMP_DIR=/app/uploads/temp
      - DATA_DIR=/app/data
      # AI服务URL配置
      - REALESRGAN_SERVICE_URL=http://realesrgan:5003
      - SUBTITLE_REMOVAL_URL=http://video-subtitle-remover:5000
      - VOICE_SYNTHESIS_URL=http://vall-e-x:5001
      - LIP_SYNC_URL=http://wav2lip:5002
    ports:
      - "8000:8000"
    networks:
      - app-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - realesrgan
      - video-subtitle-remover
      - vall-e-x
      - wav2lip

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
      cache_from:
        - aiempowerment-frontend:latest
    image: aiempowerment-frontend:latest
    container_name: aiempowerment-frontend
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./frontend/logs:/var/log/nginx
      - ./static:/usr/share/nginx/html/static:ro
    ports:
      - "80:80"
    networks:
      - app-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - backend

  # AI组件服务
  realesrgan:
    build:
      context: ./ai_components/Real-ESRGAN
      dockerfile: Dockerfile.standalone
    image: aiempowerment-realesrgan:latest
    container_name: realesrgan
    restart: unless-stopped
    ports:
      - "5003:5003"
    volumes:
      - ./uploads:/app/uploads
      - ./static:/app/static
      - ./data:/app/data
      - ./ai_components/Real-ESRGAN/weights:/app/weights
    environment: &ai_env
      - UPLOAD_DIR=/app/uploads
      - OUTPUT_DIR=/app/uploads/processed
      - TEMP_DIR=/app/uploads/temp
      - DATA_DIR=/app/data
      - CUDA_VISIBLE_DEVICES=0
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5003/status"]
      interval: 30s
      timeout: 10s
      start-period: 60s
      retries: 3
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities:
                - gpu

  video-subtitle-remover:
    build:
      context: ./ai_components/video-subtitle-remover
      dockerfile: Dockerfile.standalone
    image: aiempowerment-video-subtitle-remover:latest
    container_name: video-subtitle-remover
    restart: unless-stopped
    ports:
      - "5000:5000"
    volumes:
      - ./uploads:/app/uploads
      - ./static:/app/static
      - ./data:/app/data
    environment: *ai_env
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/status"]
      interval: 30s
      timeout: 10s
      start-period: 60s
      retries: 3
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities:
                - gpu

  vall-e-x:
    build:
      context: ./ai_components/VALL-E-X
      dockerfile: Dockerfile.standalone
    image: aiempowerment-vall-e-x:latest
    container_name: vall-e-x
    restart: unless-stopped
    ports:
      - "5001:5001"
    volumes:
      - ./uploads:/app/uploads
      - ./static:/app/static
      - ./data:/app/data
      - ./ai_components/VALL-E-X/checkpoints:/app/checkpoints
      - ./ai_components/VALL-E-X/customs:/app/customs
    environment: *ai_env
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "/app/healthcheck.sh"]
      interval: 30s
      timeout: 10s
      start-period: 60s
      retries: 3
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities:
                - gpu

  wav2lip:
    build:
      context: ./ai_components/Wav2Lip
      dockerfile: Dockerfile.standalone
    image: aiempowerment-wav2lip:latest
    container_name: wav2lip
    restart: unless-stopped
    ports:
      - "5002:5002"
    volumes:
      - ./uploads:/app/uploads
      - ./static:/app/static
      - ./data:/app/data
      - ./ai_components/Wav2Lip/checkpoints:/app/checkpoints
    environment: *ai_env
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5002/status"]
      interval: 30s
      timeout: 10s
      start-period: 60s
      retries: 3
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities:
                - gpu

  # 开发环境服务
  frontend-dev:
    build: 
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: aiempowerment-frontend-dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:8000/api/v1
    networks:
      - app-network
    profiles:
      - dev

  backend-dev:
    build: 
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: aiempowerment-backend-dev
    volumes:
      - ./backend:/app
      - ./uploads:/app/uploads
      - ./static:/app/static
      - ./data:/app/data
    ports:
      - "8000:8000"
    environment:
      - CONFIG_FILE=/app/config/default.yaml
      - SECRET_KEY=your-secret-key-here
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      # 标准目录环境变量
      - UPLOAD_DIR=/app/uploads
      - OUTPUT_DIR=/app/uploads/processed
      - TEMP_DIR=/app/uploads/temp
      - DATA_DIR=/app/data
    networks:
      - app-network
    profiles:
      - dev

volumes:
  backend-static:

networks:
  app-network:
    name: aiempowerment-network
    driver: bridge